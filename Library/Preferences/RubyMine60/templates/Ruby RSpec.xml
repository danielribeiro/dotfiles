<?xml version="1.0" encoding="UTF-8"?>
<templateSet group="Ruby RSpec">
  <template name="desc" value="describe $SYSTEM_UNDER_TEST$ do&#10;  before(:each) do&#10;    $SETUP$&#10;  end&#10; &#10;  $CURSOR$&#10;end" description="desc" toReformat="true" toShortenFQNames="true">
    <variable name="SYSTEM_UNDER_TEST" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="SETUP" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="CURSOR" expression="" defaultValue="" alwaysStopAt="true" />
    <context />
  </template>
  <template name="it" value="it 'should $DO_SOME_COOL_STUFF$' do&#10;  $ADD_SOME_COOL_CODE$&#10;end" description="it" toReformat="true" toShortenFQNames="true">
    <variable name="DO_SOME_COOL_STUFF" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="ADD_SOME_COOL_CODE" expression="" defaultValue="" alwaysStopAt="true" />
    <context />
  </template>
  <template name="matj" value="class $MATCHER_CLASS_NAME$&#10;  def initialize(expected)&#10;    @expected = expected&#10;  end&#10;&#10;  def matches?(actual)&#10;    @actual = actual&#10;    # TODO Satisfy expectation here. Return false or raise an error if it's not meet&#10;    @actual.$METHOD$.should == @expected&#10;    true&#10;  end&#10;&#10;  def failure_message&#10;    &quot;expected #{@actual.inspect} to $MATCHER_METHOD_PRESENTABLE_NAME$ #{@expected.inspect}&quot;&#10;  end&#10;&#10;  def negative_failure_message&#10;    &quot;expected #{@actual.inspect} not to $MATCHER_METHOD_PRESENTABLE_NAME$ #{@expected.inspect}&quot;&#10;  end&#10;end&#10;&#10;def $MATCHER_METHOD_NAME$(expected)&#10;  $MATCHER_CLASS_NAME$.new(expected)&#10;end&#10;" description="rspec custom matcher" toReformat="true" toShortenFQNames="true">
    <variable name="MATCHER_CLASS_NAME" expression="" defaultValue="&quot;OneMoreThan&quot;" alwaysStopAt="true" />
    <variable name="MATCHER_METHOD_NAME" expression="" defaultValue="&quot;be_one_more_than&quot;" alwaysStopAt="true" />
    <variable name="MATCHER_METHOD_PRESENTABLE_NAME" expression="underscoresToSpaces(MATCHER_METHOD_NAME)" defaultValue="MATCHER_METHOD_NAME" alwaysStopAt="true" />
    <variable name="METHOD" expression="" defaultValue="&quot;one_more_than&quot;" alwaysStopAt="true" />
    <context />
  </template>
  <template name="shrec" value="$mock$.should_receive(:$msg$).with($params$).and_return($result$)" description="shrec" toReformat="true" toShortenFQNames="true">
    <variable name="mock" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="msg" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="params" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="result" expression="" defaultValue="" alwaysStopAt="true" />
    <context />
  </template>
</templateSet>

